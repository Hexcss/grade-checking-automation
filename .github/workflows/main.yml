name: Student Code Check

on:
  pull_request:
    types:
      - opened
    branches:
      - reto-001

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check repository
      run: |
        if [[ "$GITHUB_REPOSITORY" != "Hexcss/grade-checking-automation" ]]; then
          echo "This workflow only runs on the original repository."
          exit 1
        fi

    - name: Check for unauthorized changes
      run: |
        git fetch origin master:master
        CHANGED_FILES=$(git diff --name-only origin/master..HEAD)
        if echo "$CHANGED_FILES" | grep -q "^\.github/workflows/"; then
          echo "Unauthorized changes detected in workflow files!"
          exit 1
        fi

    - name: Set up JDK 20
      uses: actions/setup-java@v2
      with:
        java-version: '20'
        distribution: 'temurin'

    - name: Install xmlstarlet and jq
      run: sudo apt-get install -y xmlstarlet jq

    - name: Check project structure and run tests
      run: |
        STRUCTURE_ERRORS=()
        TEST_STATUS="Passed"
        FAILED_TESTS=()
        
        for student_dir in entregas/*; do
          if [ -d "$student_dir" ]; then
            # Check if expected directories/files are present in the student's submission
            if [ ! -d "$student_dir/src/main/java/org/example" ]; then
              STRUCTURE_ERRORS+=("$student_dir is missing src/main/java/org/example directory!")
            fi
            if [ ! -d "$student_dir/src/test/java" ]; then
              STRUCTURE_ERRORS+=("$student_dir is missing src/test/java directory!")
            fi
            if [ -f "$student_dir/pom.xml" ]; then
              echo "Running tests for $student_dir"
              cd "$student_dir"
              if ! mvn test; then
                TEST_STATUS="Failed"
                CURRENT_FAILED_TESTS=$(xmlstarlet sel -t -v "//testcase[failure]" target/surefire-reports/*.xml)
                FAILED_TESTS+=("$student_dir: $CURRENT_FAILED_TESTS")
              fi
              cd ../..
            fi
          fi
        done
        
        echo "STRUCTURE_ERRORS=${STRUCTURE_ERRORS[@]}" >> $GITHUB_ENV
        echo "TEST_STATUS=$TEST_STATUS" >> $GITHUB_ENV
        echo "FAILED_TESTS=${FAILED_TESTS[@]}" >> $GITHUB_ENV

    - name: Notify via structured JSON
      run: |
        WEBHOOK_URL="https://m66v9njz-5001.uks1.devtunnels.ms/discord-bots-3eec8/us-central1/api/logJson"
        STUDENT_NAME="${{ github.actor }}"
        REPO_URL="${{ github.event.pull_request.head.repo.html_url }}"
        AVATAR_URL="${{ github.event.pull_request.user.avatar_url }}"
        
        STRUCTURE_STATUS="Passed"
        if [[ ${#STRUCTURE_ERRORS[@]} -ne 0 ]]; then
          STRUCTURE_STATUS="Failed"
        fi
        
        JSON_CONTENT=$(jq -n \
                        --arg student "$STUDENT_NAME" \
                        --arg repoURL "$REPO_URL" \
                        --arg avatarURL "$AVATAR_URL" \
                        --arg structureCheck "$STRUCTURE_STATUS" \
                        --arg testStatus "$TEST_STATUS" \
                        --argjson structureErrors "$(echo "${STRUCTURE_ERRORS[@]}" | jq -R . | jq -s .)" \
                        --argjson failedTests "$(echo "${FAILED_TESTS[@]}" | jq -R . | jq -s .)" \
                        '{
                          student: $student,
                          repoURL: $repoURL,
                          avatarURL: $avatarURL,
                          structureCheck: $structureCheck,
                          structureErrors: $structureErrors,
                          testStatus: $testStatus,
                          failedTests: $failedTests
                        }')
        curl -H "Content-Type: application/json" -X POST -d "$JSON_CONTENT" $WEBHOOK_URL


    - name: Comment if structure is incorrect
      if: env.STRUCTURE_ERRORS != ''
      uses: actions/github-script@v5
      with:
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: env.STRUCTURE_ERRORS
          });

    - name: Comment if tests failed
      if: env.TEST_STATUS == 'Failed'
      uses: actions/github-script@v5
      with:
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: env.FAILED_TESTS
          });
